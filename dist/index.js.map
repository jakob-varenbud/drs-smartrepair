{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/formDuplicator.ts", "../src/index.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "// Exportiert eine Funktion als ES6-Modul, die f\u00FCr die Verdopplung von Formularelementen verantwortlich ist\nexport const formDuplicator = () => {\n  let cloneCount = 0; // Z\u00E4hlvariable f\u00FCr die Anzahl der durchgef\u00FChrten Klonvorg\u00E4nge\n\n  // F\u00FCgt einen Event-Listener hinzu, der auf das vollst\u00E4ndige Laden des DOM wartet\n  document.addEventListener('DOMContentLoaded', () => {\n    // Sucht den Button durch seine ID\n    const verdoppelnBtn = document.getElementById('verdoppelnButton');\n    // F\u00FCgt dem Button einen Click-Event-Listener hinzu, der die Funktion 'verdoppeln' ausf\u00FChrt\n    verdoppelnBtn.addEventListener('click', verdoppeln);\n  });\n\n  // Die Funktion 'verdoppeln' wird aufgerufen, wenn der Benutzer auf den Button klickt\n  function verdoppeln() {\n    cloneCount++; // Erh\u00F6ht die Klonz\u00E4hlvariable um eins\n\n    // Referenziert das Original-Formularcontainer-Element durch seine ID\n    const formContainer = document.getElementById('formContainer');\n    // F\u00FCgt das Originalformular zur Klasse 'form-clone' hinzu, falls noch nicht geschehen\n    formContainer.classList.add('form-clone');\n\n    // Erstellt eine Kopie (Klon) des Formularcontainers\n    const clone = formContainer.cloneNode(true);\n\n    // Eindeutiges Suffix generieren, das auf den aktuellen Zeitpunkt und den Klonz\u00E4hler basiert\n    const uniqueSuffix = Date.now() + '-' + cloneCount;\n    // Durchl\u00E4uft alle geklonten Elemente mit einer ID\n    clone.querySelectorAll('[id]').forEach((element) => {\n      const originalId = element.id;\n      // Setzt neue eindeutige IDs und Namen f\u00FCr die geklonten Elemente\n      element.id = `${originalId}-${uniqueSuffix}`;\n      if (element.name) {\n        element.name = `${element.name}-${uniqueSuffix}`;\n      }\n      // Setzt den Zustand von Input-Elementen zur\u00FCck\n      if (element.tagName === 'INPUT') {\n        element.checked = false; // Setzt Radio-Buttons und Checkboxen zur\u00FCck\n        element.value = ''; // Setzt den Wert von Textfeldern zur\u00FCck\n      }\n      // Aktualisiert das 'for'-Attribut im Label, um es auf das neue Input-Element zu beziehen\n      const label = clone.querySelector(`label[for=\"${originalId}\"]`);\n      if (label) {\n        label.setAttribute('for', `${originalId}-${uniqueSuffix}`);\n      }\n    });\n\n    // Entfernt den Uploadcare-Button im Klon, sodass er nicht dupliziert erscheint\n    const clonedUploadcareButton = clone.querySelector('.uploadcare--widget');\n    if (clonedUploadcareButton) {\n      clonedUploadcareButton.remove(); // Entfernt den Button\n    }\n\n    // Bestimmt das zuletzt hinzugef\u00FCgte geklonte Element und f\u00FCgt den neuen Klon direkt danach ein\n    const lastClone = document.querySelectorAll('.form-clone').length\n      ? document.querySelectorAll('.form-clone')[\n          document.querySelectorAll('.form-clone').length - 1\n        ]\n      : formContainer;\n    lastClone.parentNode.insertBefore(clone, lastClone.nextSibling);\n  }\n};\n", "import { formDuplicator } from './utils/formDuplicator.ts';\n\nformDuplicator();\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,uBAAY,UAAU,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACCtF,MAAM,iBAAiB,MAAM;AAClC,QAAI,aAAa;AAGjB,aAAS,iBAAiB,oBAAoB,MAAM;AAElD,YAAM,gBAAgB,SAAS,eAAe,kBAAkB;AAEhE,oBAAc,iBAAiB,SAAS,UAAU;AAAA,IACpD,CAAC;AAGD,aAAS,aAAa;AACpB;AAGA,YAAM,gBAAgB,SAAS,eAAe,eAAe;AAE7D,oBAAc,UAAU,IAAI,YAAY;AAGxC,YAAM,QAAQ,cAAc,UAAU,IAAI;AAG1C,YAAM,eAAe,KAAK,IAAI,IAAI,MAAM;AAExC,YAAM,iBAAiB,MAAM,EAAE,QAAQ,CAAC,YAAY;AAClD,cAAM,aAAa,QAAQ;AAE3B,gBAAQ,KAAK,GAAG,UAAU,IAAI,YAAY;AAC1C,YAAI,QAAQ,MAAM;AAChB,kBAAQ,OAAO,GAAG,QAAQ,IAAI,IAAI,YAAY;AAAA,QAChD;AAEA,YAAI,QAAQ,YAAY,SAAS;AAC/B,kBAAQ,UAAU;AAClB,kBAAQ,QAAQ;AAAA,QAClB;AAEA,cAAM,QAAQ,MAAM,cAAc,cAAc,UAAU,IAAI;AAC9D,YAAI,OAAO;AACT,gBAAM,aAAa,OAAO,GAAG,UAAU,IAAI,YAAY,EAAE;AAAA,QAC3D;AAAA,MACF,CAAC;AAGD,YAAM,yBAAyB,MAAM,cAAc,qBAAqB;AACxE,UAAI,wBAAwB;AAC1B,+BAAuB,OAAO;AAAA,MAChC;AAGA,YAAM,YAAY,SAAS,iBAAiB,aAAa,EAAE,SACvD,SAAS,iBAAiB,aAAa,EACrC,SAAS,iBAAiB,aAAa,EAAE,SAAS,CACpD,IACA;AACJ,gBAAU,WAAW,aAAa,OAAO,UAAU,WAAW;AAAA,IAChE;AAAA,EACF;;;AC1DA,iBAAe;",
  "names": []
}
